@page "/relatorios"
@inject AlunoService AlunoService
@inject RecebimentoService RecebimentoService
@inject IJSRuntime JSRuntime
@inject HttpClient Http
@using System.IdentityModel.Tokens.Jwt

<PageTitle>Relatório de Frequência</PageTitle>

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header">
                <h4>Relatórios</h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <label for="mes" class="form-label">Mês</label>
                        <select class="form-control" @bind="mes" @bind:event="onchange">
                            <option value="1">Janeiro</option>
                            <option value="2">Fevereiro</option>
                            <option value="3">Março</option>
                            <option value="4">Abril</option>
                            <option value="5">Maio</option>
                            <option value="6">Junho</option>
                            <option value="7">Julho</option>
                            <option value="8">Agosto</option>
                            <option value="9">Setembro</option>
                            <option value="10">Outubro</option>
                            <option value="11">Novembro</option>
                            <option value="12">Dezembro</option>
                        </select>
                    </div>

                    <div class="col-md-6">
                        <label for="ano" class="form-label">Ano</label>
                        <InputNumber class="form-control" @bind-Value="ano" @bind-Value:event="oninput" />
                    </div>

                    <div class="col-md-12 mt-3">
                        <button class="btn btn-primary me-2" @onclick="GerarRelatorioUnificado">Gerar Relatórios</button>
                        <button class="btn btn-success" @onclick="GerarRelatorioPdfUnificado"
                                disabled="@isGeneratingPdf || (!relatorioFrequenciaGerado && !recebimentosGerados)">
                            Gerar PDFs
                        </button>
                    </div>
                </div>

                <div class="mt-4">
                    <h5>Relatório de Frequência</h5>
                    @if (relatorioFrequenciaGerado && relatorioFrequencia != null)
                    {
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>@relatorioFrequencia.Coluna1</th>
                                    <th>@relatorioFrequencia.Coluna2</th>
                                    <th>@relatorioFrequencia.Coluna3</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in relatorioFrequencia.Dados)
                                {
                                    <tr>
                                        <td>@item.Coluna1</td>
                                        <td>@item.Coluna2</td>
                                        <td>@item.Coluna3</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <p>Selecione o mês e clique em "Gerar Relatórios".</p>
                    }
                </div>

                <div class="mt-4">
                    <h5>Lista de Recebimentos</h5>
                    @if (recebimentosGerados && recebimentos != null && recebimentos.Any())
                    {
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Descrição</th>
                                    <th>Valor</th>
                                    <th>Data</th>
                                    <th>Categoria</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var recebimento in recebimentos)
                                {
                                    <tr>
                                        <td>@recebimento.Descricao</td>
                                        <td>@recebimento.Valor.ToString("C2")</td>
                                        <td>@recebimento.Data.ToString("dd/MM/yyyy")</td>
                                        <td>@recebimento.Categoria</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <p>Selecione o mês e clique em "Gerar Relatórios".</p>
                    }
                </div>

                @if (isGeneratingPdf)
                {
                    <div class="text-center mt-4">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Carregando...</span>
                        </div>
                        <p>Gerando PDF... Por favor, aguarde.</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private int _mes = DateTime.Now.Month;
    private int _ano = DateTime.Now.Year;

    private int mes
    {
        get => _mes;
        set
        {
            if (_mes != value)
            {
                _mes = value;
                LimparRelatorios();
            }
        }
    }

    private int ano
    {
        get => _ano;
        set
        {
            if (_ano != value)
            {
                _ano = value;
                LimparRelatorios();
            }
        }
    }

    
    private Relatorio relatorioFrequencia = null;
    private bool relatorioFrequenciaGerado = false;

    
    private List<Recebimento> recebimentos = new();
    private bool recebimentosGerados = false;

    private bool isGeneratingPdf = false;

    private void LimparRelatorios()
    {
        relatorioFrequencia = null;
        relatorioFrequenciaGerado = false;

        recebimentos = new List<Recebimento>();
        recebimentosGerados = false;
    }

    private async Task GerarRelatorioUnificado()
    {
        relatorioFrequencia = await AlunoService.ObterRelatorioFrequenciaPorMes(mes, ano);
        relatorioFrequenciaGerado = true;

        recebimentos = await RecebimentoService.GetRecebimentosPorMesEAnoAsync(mes, ano);
        recebimentosGerados = true;
    }

    private async Task GerarRelatorioPdfUnificado()
    {
        try
        {
            isGeneratingPdf = true;
            StateHasChanged();

            if (relatorioFrequenciaGerado && relatorioFrequencia != null)
            {
                var responseFreq = await Http.GetAsync($"relatorio/gerar-pdf?mes={mes}&ano={ano}");
                if (responseFreq.IsSuccessStatusCode)
                {
                    var pdfBytesFreq = await responseFreq.Content.ReadAsByteArrayAsync();
                    await JSRuntime.InvokeVoidAsync("downloadFileFromStream", $"Relatorio_Frequencia_{mes}_{ano}.pdf", pdfBytesFreq);
                }
            }

            if (recebimentosGerados && recebimentos != null && recebimentos.Any())
            {
                var responseRec = await Http.GetAsync($"relatorio/gerar-pdf-recebimentos?mes={mes}&ano={ano}");
                if (responseRec.IsSuccessStatusCode)
                {
                    var pdfBytesRec = await responseRec.Content.ReadAsByteArrayAsync();
                    await JSRuntime.InvokeVoidAsync("downloadFileFromStream", $"Relatorio_Recebimentos_{mes}_{ano}.pdf", pdfBytesRec);
                }
            }
        }
        finally
        {
            isGeneratingPdf = false;
            StateHasChanged();
        }
    }
}
